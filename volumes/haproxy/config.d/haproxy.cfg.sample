global
    maxconn 1028

    log stdout  format raw  local0  info

    ca-base  /etc/ssl/certs
    crt-base /etc/ssl/private

    # generated 2019-12-04, https://ssl-config.mozilla.org/#server=haproxy&server-version=2.1&config=modern&hsts=false
    # modern configuration, tweak to your needs
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12 no-tls-tickets

    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12 no-tls-tickets

    ssl-dh-param-file /tmp/dhparam.pem


defaults
    option forwardfor

    log global
    mode http

    option httplog

    timeout connect 5s
    timeout client 30s
    timeout server 30s

    stats enable
    stats uri /stats
    stats realm Haproxy\ Statistics
    stats auth admin:haproxyissupaaa!



frontend http-in
    bind *:80

    http-request add-header X-Forwarded-Proto http

    acl letsencrypt_http_acl path_beg /.well-known/acme-challenge/
    redirect scheme https if !letsencrypt_http_acl
    use_backend letsencrypt_http if letsencrypt_http_acl




####################
# SSL Frontend
####################

frontend https_in
    bind *:443 ssl crt /usr/local/etc/haproxy/certs.d/ alpn h2,http/1.1

    http-request add-header X-Forwarded-Proto https

    option httplog

    # acl chronograf  path -m beg /chronograf
    # use_backend be_chronograf   if chronograf

    default_backend default_http_backend


backend letsencrypt_http
  server letsencrypt_http_srv 127.0.0.1:8080


backend default_http_backend
  balance leastconn
  option tcp-check
  option log-health-checks
  server server1 127.0.0.1:8080 check
  server server2 127.0.0.1:8081 check
